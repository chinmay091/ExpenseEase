# Generated by Django 5.1.7 on 2025-03-23 05:43

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlaidLinkEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Used for soft deleting records.')),
                ('user_id', models.CharField(db_index=True, help_text='User ID.', max_length=250)),
                ('event_type', models.CharField(choices=[('SUCCESS', 'Success'), ('EXIT', 'Exit')], help_text='Event type (Success/Exit).', max_length=20)),
                ('link_session_id', models.TextField(help_text='Unique session identifier for Link.')),
                ('request_id', models.TextField(blank=True, help_text='Request ID for troubleshooting.')),
                ('error_type', models.TextField(blank=True, help_text='Error type if applicable.')),
                ('error_code', models.TextField(blank=True, help_text='Error code if applicable.')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Used for soft deleting records.')),
                ('access_token', models.CharField(help_text='Access token associated with the Item.', max_length=255, unique=True)),
                ('item_id', models.CharField(help_text="Plaid's Item ID.", max_length=255, unique=True)),
                ('institution_id', models.CharField(help_text='Plaid Institution ID.', max_length=255)),
                ('institution_name', models.CharField(help_text='Financial institution name.', max_length=255)),
                ('status', models.CharField(choices=[('GOOD', 'Good'), ('BAD', 'Bad')], help_text='Item status (Good/Bad).', max_length=4)),
                ('new_accounts_detected', models.BooleanField(default=False, help_text='True when Plaid detects a new account.')),
                ('transactions_cursor', models.TextField(blank=True, help_text='Cursor for tracking new transactions.')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Used for soft deleting records.')),
                ('account_id', models.CharField(db_index=True, help_text='Plaidâ€™s unique identifier for the account.', max_length=255, unique=True)),
                ('name', models.CharField(help_text='Account name.', max_length=250)),
                ('mask', models.CharField(blank=True, help_text='Last 4 digits of the account number.', max_length=4)),
                ('official_name', models.CharField(blank=True, help_text='Official account name.', max_length=255)),
                ('available_balance', models.DecimalField(blank=True, decimal_places=2, help_text='Available balance.', max_digits=20, null=True)),
                ('current_balance', models.DecimalField(blank=True, decimal_places=2, help_text='Current balance.', max_digits=20, null=True)),
                ('limit', models.DecimalField(blank=True, decimal_places=2, help_text='Credit limit (for credit accounts).', max_digits=20, null=True)),
                ('iso_currency_code', models.CharField(blank=True, help_text='ISO currency code.', max_length=10)),
                ('account_type', models.CharField(choices=[('investment', 'Investment'), ('credit', 'Credit'), ('depository', 'Depository'), ('loan', 'Loan'), ('brokerage', 'Brokerage'), ('other', 'Other')], help_text='Account type.', max_length=20)),
                ('account_subtype', models.CharField(blank=True, help_text='Account subtype.', max_length=250)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='plaid.item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Used for soft deleting records.')),
                ('transaction_id', models.CharField(db_index=True, help_text='Unique transaction ID.', max_length=255, unique=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Transaction amount.', max_digits=20, null=True)),
                ('iso_currency_code', models.CharField(blank=True, help_text='ISO currency code.', max_length=10)),
                ('location', models.JSONField(help_text='Transaction location details.')),
                ('name', models.CharField(blank=True, help_text='Transaction name.', max_length=255)),
                ('merchant_name', models.CharField(blank=True, help_text='Enriched merchant name.', max_length=255)),
                ('pending', models.BooleanField(help_text='True if transaction is pending.')),
                ('account_owner', models.CharField(blank=True, help_text='Account owner name.', max_length=255)),
                ('date', models.DateField(help_text='Transaction date.')),
                ('authorized_date', models.DateField(blank=True, help_text='Authorization date.', null=True)),
                ('datetime', models.DateTimeField(blank=True, help_text='Transaction timestamp.', null=True)),
                ('authorized_datetime', models.DateTimeField(blank=True, help_text='Authorization timestamp.', null=True)),
                ('confidence_level', models.CharField(blank=True, choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], help_text='Confidence level in transaction categorization.', max_length=20)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='plaid.account')),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
    ]
