# Generated by Django 5.1 on 2024-09-09 07:08

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("plaid", "0002_plaidlinkevent_alter_item_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Used for soft deleting records.",
                    ),
                ),
                (
                    "account_id",
                    models.CharField(
                        help_text="Plaid’s unique identifier for the account.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the account, either assigned by the user or by the financial institution itself.",
                        max_length=250,
                    ),
                ),
                (
                    "mask",
                    models.CharField(
                        blank=True,
                        help_text="The last 2-4 alphanumeric characters of an account's official account number.",
                        max_length=4,
                    ),
                ),
                (
                    "official_name",
                    models.TextField(
                        blank=True,
                        help_text="The official name of the account as given by the financial institution.",
                    ),
                ),
                (
                    "available_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=30,
                        help_text="The amount of funds available to be withdrawn from the account, as determined by the financial institution.",
                        max_digits=65,
                        null=True,
                    ),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=30,
                        help_text="The total amount of funds in or owed by the account.",
                        max_digits=65,
                        null=True,
                    ),
                ),
                (
                    "limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=30,
                        help_text="For credit-type accounts, this represents the credit limit.",
                        max_digits=65,
                        null=True,
                    ),
                ),
                (
                    "iso_currency_code",
                    models.CharField(
                        blank=True,
                        help_text="The ISO-4217 currency code of the balance.",
                        max_length=100,
                    ),
                ),
                (
                    "unofficial_currency_code",
                    models.CharField(
                        blank=True,
                        help_text="The unofficial currency code associated with the balance.",
                        max_length=100,
                    ),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("investment", "Investment"),
                            ("credit", "Credit"),
                            ("depository", "Depository"),
                            ("loan", "Loan"),
                            ("brokerage", "Brokerage"),
                            ("other", "Other"),
                        ],
                        help_text="Account types. Possible values: investment, credit, depository, loan, brokerage, other",
                        max_length=20,
                    ),
                ),
                (
                    "account_subtype",
                    models.CharField(
                        blank=True, help_text="Account subtype", max_length=250
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accounts",
                        to="plaid.item",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Used for soft deleting records.",
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        help_text="The unique ID of the transaction. Like all Plaid identifiers, the transaction_id is case sensitive.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=30,
                        help_text="The settled value of the transaction, denominated in the transactions's currency, as stated in iso_currency_code or unofficial_currency_code.",
                        max_digits=65,
                        null=True,
                    ),
                ),
                (
                    "iso_currency_code",
                    models.CharField(
                        blank=True,
                        help_text="The ISO-4217 currency code of the balance.",
                        max_length=100,
                    ),
                ),
                (
                    "unofficial_currency_code",
                    models.CharField(
                        blank=True,
                        help_text="The unofficial currency code associated with the balance.",
                        max_length=100,
                    ),
                ),
                (
                    "check_number",
                    models.TextField(
                        blank=True,
                        help_text="The check number of the transaction. This field is only populated for check transactions.",
                    ),
                ),
                (
                    "location",
                    models.JSONField(
                        help_text="A representation of where a transaction took place."
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        help_text="The merchant name or transaction description.",
                    ),
                ),
                (
                    "merchant_name",
                    models.TextField(
                        blank=True,
                        help_text="The merchant name, as enriched by Plaid from the name field.",
                    ),
                ),
                (
                    "merchant_entity_id",
                    models.TextField(
                        blank=True,
                        help_text="A unique, stable, Plaid-generated ID that maps to the merchant.",
                    ),
                ),
                (
                    "pending",
                    models.BooleanField(
                        help_text="When true, identifies the transaction as pending or unsettled."
                    ),
                ),
                (
                    "account_owner",
                    models.TextField(
                        blank=True,
                        help_text="The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts.",
                    ),
                ),
                (
                    "logo_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of a logo associated with this transaction, if available. The logo will always be 100×100 pixel PNG file.",
                        null=True,
                    ),
                ),
                (
                    "website",
                    models.TextField(
                        blank=True,
                        help_text="The website associated with this transaction, if available.",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        help_text="For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted."
                    ),
                ),
                (
                    "authorized_date",
                    models.DateField(
                        blank=True,
                        help_text="The date that the transaction was authorized. For posted transactions, the date field will indicate the posted date, but authorized_date will indicate the day the transaction was authorized by the financial institution. If presenting transactions to the user in a UI, the authorized_date, when available, is generally preferable to use over the date field for posted transactions, as it will generally represent the date the user actually made the transaction.",
                        null=True,
                    ),
                ),
                (
                    "datetime",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when a transaction was posted.",
                        null=True,
                    ),
                ),
                (
                    "authorized_datetime",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time that the transaction was authorized. For posted transactions, the datetime field will indicate the posted date, but authorized_date will indicate the day the transaction was authorized by the financial institution. If presenting transactions to the user in a UI, the authorized_date, when available, is generally preferable to use over the date field for posted transactions, as it will generally represent the date the user actually made the transaction.",
                        null=True,
                    ),
                ),
                (
                    "primary_personal_finance_category",
                    models.TextField(
                        blank=True,
                        help_text="A high level category that communicates the broad category of the transaction.",
                    ),
                ),
                (
                    "detailed_personal_finance_category",
                    models.TextField(
                        blank=True,
                        help_text="A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category.",
                    ),
                ),
                (
                    "confidence_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("unknown", "Unknown"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("very_high", "Very High"),
                        ],
                        help_text="A description of how confident we are that the provided categories accurately describe the transaction intent.",
                        max_length=200,
                    ),
                ),
                (
                    "personal_finance_category_icon_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of an icon associated with the primary personal finance category. The icon will always be 100×100 pixel PNG file.",
                        null=True,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="plaid.account",
                    ),
                ),
            ],
            options={
                "ordering": ("-date",),
            },
        ),
    ]